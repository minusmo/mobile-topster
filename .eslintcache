[{"/Users/eumhojun/mobile-topster/src/App.js":"1","/Users/eumhojun/mobile-topster/src/index.js":"2","/Users/eumhojun/mobile-topster/src/reportWebVitals.js":"3","/Users/eumhojun/mobile-topster/src/credentials.js":"4","/Users/eumhojun/mobile-topster/src/Grid.js":"5"},{"size":43902,"mtime":1632237988372,"results":"6","hashOfConfig":"7"},{"size":460,"mtime":1609762060653,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609320116750,"results":"9","hashOfConfig":"7"},{"size":119,"mtime":1610326559817,"results":"10","hashOfConfig":"7"},{"size":1035,"mtime":1632237688232,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"m1kwa4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eumhojun/mobile-topster/src/App.js",["24","25","26","27","28","29","30","31","32","33","34","35"],"import React, { useState, useRef, useEffect } from \"react\";\nimport Qs from \"querystring\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\nimport * as _ from \"lodash\";\nimport { saveAs } from \"file-saver\";\nimport * as htmlToImage from \"html-to-image\";\nimport { config, debugPort, title } from \"process\";\nimport \"./App.css\";\nimport smallblank from \"./smallblank.png\";\nimport cross from \"./cross.png\";\nimport { username, password } from \"./credentials\";\nimport {\n  SSL_OP_NO_COMPRESSION,\n  SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION,\n} from \"constants\";\nimport TopsterGrid from \"./Grid\";\n\nlet initAlbums = {\n  row1: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row2: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row3: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row4: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row5: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row6: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row7: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row8: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row9: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n  row10: {\n    isHidden: false,\n    cols: new Array(10).fill({\n      src: smallblank,\n      alt: \"\",\n      hideCol: false,\n    }),\n  },\n};\n\n// console.log(initAlbums['row1']['cols'])\n// initAlbums['row1']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row2']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row3']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row4']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row5']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row6']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row7']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row8']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row9']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n// initAlbums['row10']['cols'].splice(9,1,{\n//   src: smallblank,\n//   alt: \"\",\n//   hideCol: true,\n// });\n\n// console.log(initAlbums);\n\nconst initTitles = {\n  row1: new Array(10).fill(\"\"),\n  row2: new Array(10).fill(\"\"),\n  row3: new Array(10).fill(\"\"),\n  row4: new Array(10).fill(\"\"),\n  row5: new Array(10).fill(\"\"),\n  row6: new Array(10).fill(\"\"),\n  row7: new Array(10).fill(\"\"),\n  row8: new Array(10).fill(\"\"),\n  row9: new Array(10).fill(\"\"),\n  row10: new Array(10).fill(\"\"),\n};\n\nfunction App() {\n  const [albums, setAlbums] = useState(initAlbums);\n  const [showSearch, setShowSearch] = useState(\"none\");\n  const [selected, setSelected] = useState(null);\n  const [term, setTerm] = useState(\"\");\n  const [country, setCountry] = useState(\"us\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [showAlbumTitle, setShowAlbumTitle] = useState(false);\n  const [showOptions, setShowOptions] = useState(\"none\");\n  const [backgroundColor, setBackgroundColor] = useState(\"#000\");\n  const [rows, setRows] = useState(10);\n  const [columns, setColumns] = useState(10);\n  const [albumWidth, setAlbumWidth] = useState(\"10%\");\n  const [titles, setTitles] = useState(initTitles);\n  const [topConHeight, setTopConHeight] = useState(\"95vw\");\n  const [row1Cols, setRow1Cols] = useState(10);\n  const [row2Cols, setRow2Cols] = useState(10);\n  const [row3Cols, setRow3Cols] = useState(10);\n  const [row4Cols, setRow4Cols] = useState(10);\n  const [row5Cols, setRow5Cols] = useState(10);\n  const [row6Cols, setRow6Cols] = useState(10);\n  const [row7Cols, setRow7Cols] = useState(10);\n  const [row8Cols, setRow8Cols] = useState(10);\n  const [row9Cols, setRow9Cols] = useState(10);\n  const [row10Cols, setRow10Cols] = useState(10);\n  const [curTopsterStyle, setCurTopsterStyle] = useState(\"10x10\");\n  const topStyles = useRef({\n    \"10x10\": \"repeat(10, 1fr)\",\n    42: \"calc(95vw/5) calc(95vw/5) calc(95vw/6) calc(95vw/6) calc(95vw/10) calc(95vw/10)\",\n  });\n\n  const handleClickTopster = (e) => {\n    e.preventDefault();\n    if (showSearch === \"none\") {\n      setShowSearch(\"\");\n      setSelected(e.target.id);\n      // console.log(e.target.id);\n    }\n  };\n\n  const handleClickAlbum = (e) => {\n    // console.log('handle click album');\n    let selectedRow = null;\n    let selectedCol = null;\n\n    if (selected.slice(0, 5) === \"row10\") {\n      selectedRow = selected.slice(0, 5);\n      selectedCol = Number.parseInt(selected.slice(6));\n    } else {\n      selectedRow = selected.slice(0, 4);\n      selectedCol = Number.parseInt(selected.slice(5));\n    }\n\n    const newAlbums = _.assign({}, albums);\n    // console.log(selectedRow);\n    // console.log(selectedCol);\n    // console.log(newAlbums[selectedRow].cols[selectedCol]);\n    newAlbums[selectedRow].cols.splice(selectedCol, 1, {\n      src: e.target.src,\n      alt: e.target.alt,\n      hideCol: false,\n    });\n\n    setAlbums(newAlbums);\n\n    const newTitles = { ...titles };\n    newTitles[selectedRow][selectedCol] = e.target.alt;\n    setTitles(newTitles);\n    // console.log('topster updated');\n\n    setSelected(null);\n    setShowSearch(\"none\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // console.log(term);\n    const trimTerm = term.trim();\n    if (trimTerm.slice(0, 4) === \"http\") {\n      const artists = window.prompt(\"아티스트명을 입력해주세요.\");\n      const albumName = window.prompt(\"앨범명을 입력해주세요.\");\n\n      const arr = [\n        {\n          artists: [{ name: \"\" }],\n          name: \"\",\n          images: [{ url: smallblank }],\n          id: \"00000\",\n        },\n        {\n          artists: [{ name: artists }],\n          name: albumName,\n          images: [{ url: trimTerm }],\n          id: \"99999\",\n        },\n      ];\n      setSearchResult(arr);\n      return;\n    }\n    const queryTerm = trimTerm.replace(\" \", \"+\");\n\n    // const ITUNES_API = `https://itunes.apple.com/search?term=${queryTerm}&country=${country}&media=music&entity=album&callback=jsonpcallback`;\n\n    // query itunes api\n    // $.ajax({\n    //   url: 'https://itunes.apple.com/search',\n    //   crossDomain: true,\n    //   dataType: 'jsonp',\n    //   data: {\n    //     term: queryTerm,\n    //     country: country,\n    //     // media: 'music',\n    //     entity: 'album',\n    //     limit: 100,\n    //     explicit: 'No'\n    //   },\n    //   method: 'GET',\n    //   success: function(data){\n    //     console.log(data);\n    //     const { results } = data;\n    //     const arr = [{\n    //       collectionId: '000000',\n    //       collectionName: '',\n    //       artistName: '',\n    //       artworkUrl100: smallblank,\n    //     }, ...results]\n    //     setSearchResult(arr);\n    //   }\n    // });\n\n    // query spotify api\n    const authConfig = {\n      method: \"post\",\n      url: \"https://accounts.spotify.com/api/token\",\n      headers: {\n        // 'Authorization': 'Basic MDY0YzVhODRkODFhNDkwNDg2NjA4ODNmMGI0ZmVlNTI6OTIxZjFiNzE4NDE2NGE4Nzk4ZDdkNDNiMWFkZWY0YmM=',\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      data: Qs.stringify({ grant_type: \"client_credentials\" }),\n      auth: {\n        username: username,\n        password: password,\n      },\n      withCredentials: true,\n    };\n\n    axios(authConfig)\n      .then((res) => {\n        const api1 = `https://api.spotify.com/v1/search/?q=album:${queryTerm}%20OR%20artist:${queryTerm}&type=album&market=${country}&limit=50`;\n        const api2 = `https://api.spotify.com/v1/search/?q=${queryTerm}&type=album&market=${country}&limit=50`;\n        // console.log(res.data);\n        const { access_token } = res.data;\n        const queryConfig = {\n          method: \"get\",\n          url: api2,\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n          },\n        };\n\n        axios(queryConfig).then((res) => {\n          // console.log(res.data);\n          const {\n            albums: { items },\n          } = res.data;\n          const arr = [\n            {\n              artists: [{ name: \"\" }],\n              name: \"\",\n              images: [{ url: smallblank }],\n              id: \"00000\",\n            },\n            ...items,\n          ];\n          setSearchResult(arr);\n        });\n      })\n      .catch((err) => console.warn(err));\n  };\n\n  useEffect(() => {\n    console.log(curTopsterStyle);\n  }, []);\n\n  // const ImgWithCaption = (props) => (\n  //   <figure className=\"figure\" style={{...props.style, width: albumWidth }}>\n  //     <img id={props.id} src={props.src} alt={props.alt} onClick={handleClickTopster}/>\n  //     {/* {showAlbumTitle ? <figcaption>{props.alt}</figcaption> : <></>} */}\n  //   </figure>)\n\n  // const handleColumns = (curColumns) => {\n  //   // const docRows = Array.from(document.getElementsByClassName('row'));\n  //   // // const showingRows = docRows.filter(row => row.style.display === '');\n  //   // docRows.forEach((arow) => {\n  //   //   const showingColumns = Array.from(arow.children).filter(acolumn => acolumn.style.display === '');\n  //   let newAlbums = { ...albums };\n  //   const showingColumns = newAlbums.row1.cols.filter(album => album.hideCol === false);\n\n  //     if (curColumns === showingColumns.length) {\n  //       return\n  //     }\n  //     else if (curColumns > showingColumns.length) {\n  //       // 새로운 칼럼이 기존보다 더 많을 경우\n  //       for (let row of Object.values(newAlbums)) {\n  //         for (let i = showingColumns.length; i < curColumns; i++) {\n  //           row[i].hideCol = '';\n  //         }\n\n  //       }\n  //     }\n  //     else {\n  //       // 새로운 칼럼이 기존보다 더 적을 경우\n  //       // for (let row of Object.values(newAlbums)) {\n  //       //   for (let i = curColumns; i < showingColumns.length; i++) {\n  //       //     row[i].hideCol = 'none';\n  //       //   }\n  //       // }\n  //       // for (let key of _.keys(albums)) {\n  //       //   // const toUpdate = _.takeRight(newAlbums[key].cols, diff);\n  //       //   // const updated = toUpdate.map(each => {\n  //       //   //   const newOne = { ...each, hideCol: true };\n  //       //   //   return newOne\n  //       //   // })\n  //       //   // const dropped = _.dropRight(newAlbums[key], diff);\n  //       //   // const merged = _.concat(dropped, updated);\n  //       //   // newAlbums[key].cols = merged;\n\n  //       //   // const last = _.nth(newAlbums[key].cols);\n  //       //   // console.log(last);\n  //       //   // last.hideCol = true;\n  //       //   // newAlbums[key].cols.splice(newAlbums[key].cols.length - 1, 1, last);\n  //       //   newAlbums[key].cols[showingColumns.length - 1].hideCol = true;\n  //       // }\n  //       setAlbums(newAlbums);\n  //       console.log(newAlbums);\n  //     }\n  //   // })\n\n  // }\n\n  // const handleRows = (curRows) => {\n  //   const topCon = document.getElementById('topCon');\n  //   const showingRows = Array.from(topCon.children).filter(arow => arow.style.display === '');\n  //   if (curRows === showingRows.length) {\n  //     return\n  //   }\n  //   else if (curRows > showingRows.length) {\n  //     // 새로운 로우가 기존보다 많을 경우\n  //     for (let i = showingRows.length; i < curRows; i++) {\n  //       topCon.children[i].style.display = '';\n  //     }\n  //   }\n  //   else {\n  //     // 새로운 로우가 기존보다 적을 경우\n  //     for (let i = curRows; i < showingRows.length; i++) {\n  //       topCon.children[i].style.display = 'none';\n  //     }\n  //   }\n  // }\n  const getExtenedHeight = (gridtemplaterow) => {\n    const heights = gridtemplaterow.split(\" \");\n    const viewportWidth = window.innerWidth;\n    const viewportRatios = _.map(heights, (height) => {\n      return (viewportWidth * Number.parseFloat(height.slice(5, 9))) / 100;\n    });\n    const tentimes = _.map(\n      viewportRatios,\n      (viewportRatio) => 10 * viewportRatio + \"px\"\n    );\n    return tentimes.join(\" \");\n  };\n\n  const handleSave = () => {\n    const mainCon = document.getElementById(\"mainContainer\");\n    const topCon = document.getElementById(\"topCon\");\n    const titleContainer = document.getElementById(\"titleContainer\");\n    const gridStyle = topCon.style.gridTemplateRows;\n    if (curTopsterStyle === \"42\") {\n      const extendedStyle = getExtenedHeight(gridStyle);\n      topCon.style.gridTemplateRows = extendedStyle;\n    }\n    const topConWidth = topCon.offsetWidth;\n    topCon.style.width = topCon.offsetWidth * 10 + \"px\";\n    topCon.style.height =\n      curTopsterStyle === \"42\"\n        ? topCon.offsetHeight * 9.5 + \"px\"\n        : topCon.offsetHeight * 10 + \"px\";\n    topCon.style.padding = \"25vw\";\n\n    titleContainer.style.width = topConWidth * 10 + \"px\";\n    titleContainer.style.padding = \"25vw\";\n    titleContainer.style.fontSize = \"5em\";\n\n    const options = {\n      pixelRatio: 1,\n    };\n    htmlToImage\n      .toBlob(mainCon, options)\n      .then((blob) => {\n        saveAs(blob, \"topster-mobile.png\");\n        topCon.style.gridTemplateRows = gridStyle;\n        topCon.style.width = \"95vw\";\n        topCon.style.height = \"95vw\";\n        topCon.style.padding = \"2.5vw\";\n        titleContainer.style.width = \"95vw\";\n        titleContainer.style.fontSize = \".5em\";\n        titleContainer.style.padding = \"2.5vw\";\n      })\n      .catch((err) => console.warn(err));\n  };\n\n  const handleSetGrid = (curRows, curColumns) => {\n    // console.log('handling set grid');\n\n    let newAlbums = { ...albums };\n    const showingColumns = newAlbums.row1.cols.filter(\n      (album) => album.hideCol === false\n    );\n\n    const hideCol = (row, differ) => {\n      const theRow = newAlbums[row];\n      const toUpdate = _.takeRight(theRow.cols, differ);\n      // console.log(toUpdate);\n\n      const updated = _.map(toUpdate, (each) => ({ ...each, hideCol: true }));\n      const dropped = _.dropRight(theRow.cols, differ);\n      // console.log(dropped);\n      const merged = _.concat(dropped, updated);\n      newAlbums[row].cols = merged;\n    };\n\n    const showCol = (row, differ) => {\n      const theRow = newAlbums[row];\n      const toUpdate = _.take(theRow.cols, differ);\n      console.log(toUpdate);\n\n      const updated = _.map(toUpdate, (each) => ({ ...each, hideCol: false }));\n      const dropped = _.drop(theRow.cols, differ);\n      console.log(dropped);\n      const merged = _.concat(updated, dropped);\n      newAlbums[row].cols = merged;\n    };\n\n    if (curColumns === showingColumns.length) {\n    } else if (curColumns > showingColumns.length) {\n      // 새로운 칼럼이 기존보다 더 많을 경우\n\n      const diff = curColumns;\n      showCol(\"row1\", diff);\n      showCol(\"row2\", diff);\n      showCol(\"row3\", diff);\n      showCol(\"row4\", diff);\n      showCol(\"row5\", diff);\n      showCol(\"row6\", diff);\n      showCol(\"row7\", diff);\n      showCol(\"row8\", diff);\n      showCol(\"row9\", diff);\n      showCol(\"row10\", diff);\n      console.log(newAlbums);\n    } else {\n      // 새로운 칼럼이 기존보다 더 적을 경우\n\n      const diff = 10 - curColumns;\n      console.log(albums);\n\n      console.log(newAlbums);\n      hideCol(\"row1\", diff);\n      hideCol(\"row2\", diff);\n      hideCol(\"row3\", diff);\n      hideCol(\"row4\", diff);\n      hideCol(\"row5\", diff);\n      hideCol(\"row6\", diff);\n      hideCol(\"row7\", diff);\n      hideCol(\"row8\", diff);\n      hideCol(\"row9\", diff);\n      hideCol(\"row10\", diff);\n      console.log(newAlbums);\n    }\n    // columns 조정이 끝난 후 row의 그리드를 수정\n    const allRows = document.getElementsByClassName(\"row\");\n    const changeGridColumnNumber = (row) => {\n      row.style.gridTemplateColumns = `repeat(${curColumns}, 1fr)`;\n    };\n    _.forEach(allRows, changeGridColumnNumber);\n\n    console.log(\"handling rows\");\n\n    let count = 0;\n    for (let row of Object.values(newAlbums)) {\n      if (row.isHidden === false) {\n        count += 1;\n      }\n    }\n\n    console.log(count);\n    console.log(curRows);\n\n    if (curRows === count) {\n    } else if (curRows > count) {\n      // 새로운 로우가 기존보다 많을 경우\n      Object.keys(newAlbums).forEach((key, index) => {\n        if (index < curRows) {\n          newAlbums[key].isHidden = false;\n        }\n      });\n    } else {\n      // 새로운 로우가 기존보다 적을 경우\n      Object.keys(newAlbums).forEach((key, index) => {\n        if (index >= curRows) {\n          newAlbums[key].isHidden = true;\n        }\n      });\n    }\n    // 탑스터 컨테이너를 가져와서 row를 수정\n    const newImgWidth = `${Math.floor(95 / curColumns)}%`;\n    const topCon = document.getElementById(\"topCon\");\n    topCon.style.gridTemplateRows = `repeat(${curRows}, 1fr)`;\n    const topHeight = Number.parseFloat(\n      Number.parseInt(curRows) * Math.floor(95 / curColumns)\n    );\n    const newTopConHeight = `${topHeight}vw`;\n    setTopConHeight(newTopConHeight);\n    // console.log(newAlbums);\n    setAlbums(newAlbums);\n\n    // console.log(curColumns);\n    // console.log(newImgWidth);\n    setAlbumWidth(newImgWidth);\n  };\n\n  const handleShowOptions = () => {\n    if (showOptions === \"\") {\n      setShowOptions(\"none\");\n    } else {\n      setShowOptions(\"\");\n    }\n  };\n\n  const handleDoubleClick = (e) => {\n    const img = e.target;\n    img.src = smallblank;\n    img.alt = \"\";\n  };\n\n  const handleShowTitles = (albums) => {\n    const showingRows = _.filter(albums, (row) => row.isHidden === false);\n    const titles = [];\n    _.forEach(showingRows, (rowData, rowname) => {\n      _.forEach(rowData.cols, (albumData) => {\n        if (!albumData.hideCol) {\n          titles.push(albumData.alt);\n        }\n      });\n    });\n    const titleLists = _.map(titles, (title, key) => {\n      const listElement = document.createElement(\"li\");\n      listElement.textContent = title;\n      return listElement;\n    });\n    console.log(titleLists);\n    return titleLists;\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={handleShowOptions}>Options</button>\n      <button onClick={handleSave}>Save</button>\n      {/* 탑스터  */}\n      <div id=\"mainContainer\">\n        <div\n          id=\"topCon\"\n          className=\"topCon\"\n          style={{\n            backgroundColor: backgroundColor,\n            height: topConHeight,\n            gridTemplateRows: topStyles.current[curTopsterStyle],\n            rowGap: curTopsterStyle === \"42\" ? \"\" : \"1%\",\n          }}\n        >\n          <div\n            className=\"row\"\n            id=\"row1\"\n            style={{\n              gridTemplateColumns: `repeat(${row1Cols}, 1fr)`,\n              display: albums[\"row1\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row1\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row1-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row1-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row2\"\n            style={{\n              gridTemplateColumns: `repeat(${row2Cols}, 1fr)`,\n              display: albums[\"row2\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row2\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row2-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row2-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row3\"\n            style={{\n              gridTemplateColumns: `repeat(${row3Cols}, 1fr)`,\n              display: albums[\"row3\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row3\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row3-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row3-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row4\"\n            style={{\n              gridTemplateColumns: `repeat(${row4Cols}, 1fr)`,\n              display: albums[\"row4\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row4\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row4-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row4-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row5\"\n            style={{\n              gridTemplateColumns: `repeat(${row5Cols}, 1fr)`,\n              display: albums[\"row5\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row5\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row5-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row5-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row6\"\n            style={{\n              gridTemplateColumns: `repeat(${row6Cols}, 1fr)`,\n              display: albums[\"row6\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row6\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row6-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row6-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row7\"\n            style={{\n              gridTemplateColumns: `repeat(${row7Cols}, 1fr)`,\n              display: albums[\"row7\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row7\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row7-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row7-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row8\"\n            style={{\n              gridTemplateColumns: `repeat(${row8Cols}, 1fr)`,\n              display: albums[\"row8\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row8\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row8-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row8-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row9\"\n            style={{\n              gridTemplateColumns: `repeat(${row9Cols}, 1fr)`,\n              display: albums[\"row9\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row9\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row9-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row9-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n          <div\n            className=\"row\"\n            id=\"row10\"\n            style={{\n              gridTemplateColumns: `repeat(${row10Cols}, 1fr)`,\n              display: albums[\"row10\"].isHidden ? \"none\" : \"\",\n            }}\n          >\n            {albums[\"row10\"][\"cols\"].map((album, index) => {\n              return (\n                <div\n                  key={`row10-${index}`}\n                  style={{\n                    display: album.hideCol ? \"none\" : \"block\",\n                    backgroundImage: `url(${album.src})`,\n                  }}\n                  id={`row10-${index}`}\n                  onClick={handleClickTopster}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div\n          id=\"titleContainer\"\n          style={{ display: showAlbumTitle ? \"\" : \"none\" }}\n        >\n          <ul id=\"titleUnorderedlist\">\n            {titles[\"row1\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row1-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row2\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row2-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row3\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row3-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row4\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row4-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row5\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row5-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row6\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row6-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row7\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row7-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row8\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row8-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row9\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row9-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            <br></br>\n            {titles[\"row10\"].map((title, index) => {\n              return title.length !== 0 ? (\n                <li key={`row10-${index}-title`}>{title}</li>\n              ) : null;\n            })}\n            {/* {handleShowTitles(albums)} */}\n          </ul>\n        </div>\n      </div>\n\n      <div style={{ display: showOptions }}>\n        <input\n          type=\"checkbox\"\n          checked={showAlbumTitle}\n          onChange={(e) => {\n            setShowAlbumTitle(!showAlbumTitle);\n          }}\n        />\n        <label>show album titles </label>\n        <br></br>\n        <label>BackgroundColor: </label>\n        <input\n          type=\"text\"\n          placeholder=\"#HEX color\"\n          value={backgroundColor}\n          onChange={(e) => setBackgroundColor(e.target.value)}\n        />\n        <label>#HEX</label>\n        <br></br>\n        <label>rows</label>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"10\"\n          value={rows}\n          onChange={(e) => {\n            setRows(Number.parseInt(e.target.value));\n            e.preventDefault();\n          }}\n        />\n        <span>{rows}</span>\n        <br></br>\n        <label>columns</label>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"10\"\n          value={columns}\n          onChange={(e) => {\n            setColumns(Number.parseInt(e.target.value));\n            e.preventDefault();\n          }}\n        />\n        <span>{columns}</span>\n        <br></br>\n        <button\n          onClick={(e) => {\n            handleSetGrid(rows, columns);\n            e.preventDefault();\n          }}\n        >\n          SetGrid\n        </button>\n        <button\n          onClick={(e) => {\n            setCurTopsterStyle(\"42\");\n            setTopConHeight(\"93vw\");\n            setRows(6);\n            setRow1Cols(5);\n            setRow2Cols(5);\n            setRow3Cols(6);\n            setRow4Cols(6);\n            setRow5Cols(10);\n            setRow6Cols(10);\n            e.preventDefault();\n          }}\n        >\n          Set42\n        </button>\n        <button\n          onClick={(e) => {\n            handleSetGrid(10, 10);\n            setRows(10);\n            setColumns(10);\n            setTopConHeight(\"95vw\");\n            setCurTopsterStyle(\"10x10\");\n            setRow1Cols(10);\n            setRow2Cols(10);\n            setRow3Cols(10);\n            setRow4Cols(10);\n            e.preventDefault();\n          }}\n        >\n          reset\n        </button>\n\n        <div id=\"columnController\">\n          <p>행별 개수 조절하기↓</p>\n          <p style={{ fontSize: \".8em\" }}>\n            반드시 그리드 조절 후 해주시기 바랍니다.\n          </p>\n          <div\n            className=\"columnControl\"\n            style={{\n              width: \"100vw\",\n              display: \"grid\",\n              gridTemplateRows: \"repeat(2, 1fr)\",\n              gridTemplateColumns: \"repeat(5, 1fr)\",\n            }}\n          >\n            <p>row1</p>\n            <p>row2</p>\n            <p>row3</p>\n            <p>row4</p>\n            <p>row5</p>\n            <div>\n              <input\n                type=\"text\"\n                value={row1Cols}\n                onChange={(e) => setRow1Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row2Cols}\n                onChange={(e) => setRow2Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row3Cols}\n                onChange={(e) => setRow3Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row4Cols}\n                onChange={(e) => setRow4Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row5Cols}\n                onChange={(e) => setRow5Cols(e.target.value)}\n              />\n            </div>\n            <p>row6</p>\n            <p>row7</p>\n            <p>row8</p>\n            <p>row9</p>\n            <p>row10</p>\n            <div>\n              <input\n                type=\"text\"\n                value={row6Cols}\n                onChange={(e) => setRow6Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row7Cols}\n                onChange={(e) => setRow7Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row8Cols}\n                onChange={(e) => setRow8Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row9Cols}\n                onChange={(e) => setRow9Cols(e.target.value)}\n              />\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={row10Cols}\n                onChange={(e) => setRow10Cols(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* 검색창  */}\n      <div\n        id=\"framecontainer\"\n        style={{\n          display: showSearch,\n          position: \"absolute\",\n          width: \"100%\",\n          top: \"20px\",\n          left: 0,\n          backgroundColor: \"rgba(189, 229, 237, .9)\",\n          overflow: \"auto\",\n        }}\n      >\n        <img src={cross} alt=\"cross\" onClick={() => setShowSearch(\"none\")} />\n        <div id=\"formcontainer\">\n          <form\n            action=\"\"\n            method=\"get\"\n            acceptCharset=\"utf-8\"\n            id=\"iTunesSearchForm\"\n            onSubmit={handleSubmit}\n          >\n            <input\n              type=\"text\"\n              className=\"text\"\n              name=\"term\"\n              id=\"term\"\n              onChange={(e) => {\n                setTerm(e.target.value);\n              }}\n            />\n            <br></br>\n            <select\n              name=\"country\"\n              id=\"country\"\n              onChange={(e) => setCountry(e.target.value)}\n            >\n              <option value=\"us\">United States of America</option>\n              <option value=\"gb\">United Kingdom</option>\n              <option value=\"al\">Albania</option>\n              <option value=\"dz\">Algeria</option>\n              <option value=\"ao\">Angola</option>\n              <option value=\"ai\">Anguilla</option>\n              <option value=\"ag\">Antigua and Barbuda</option>\n              <option value=\"ar\">Argentina</option>\n              <option value=\"am\">Armenia</option>\n              <option value=\"au\">Australia</option>\n              <option value=\"at\">Austria</option>\n              <option value=\"az\">Azerbaijan</option>\n              <option value=\"bs\">Bahamas</option>\n              <option value=\"bh\">Bahrain</option>\n              <option value=\"bb\">Barbados</option>\n              <option value=\"by\">Belarus</option>\n              <option value=\"be\">Belgium</option>\n              <option value=\"bz\">Belize</option>\n              <option value=\"bj\">Benin</option>\n              <option value=\"bm\">Bermuda</option>\n              <option value=\"bt\">Bhutan</option>\n              <option value=\"bo\">Bolivia</option>\n              <option value=\"bw\">Botswana</option>\n              <option value=\"br\">Brazil</option>\n              <option value=\"vg\">British Virgin Islands</option>\n              <option value=\"bn\">Brunei Darussalam</option>\n              <option value=\"bg\">Bulgaria</option>\n              <option value=\"bf\">Burkina-Faso</option>\n              <option value=\"kh\">Cambodia</option>\n              <option value=\"ca\">Canada</option>\n              <option value=\"cv\">Cape Verde</option>\n              <option value=\"ky\">Cayman Islands</option>\n              <option value=\"td\">Chad</option>\n              <option value=\"cl\">Chile</option>\n              <option value=\"cn\">China</option>\n              <option value=\"co\">Colombia</option>\n              <option value=\"cr\">Costa Rica</option>\n              <option value=\"hr\">Croatia</option>\n              <option value=\"cy\">Cyprus</option>\n              <option value=\"cz\">Czech Republic</option>\n              <option value=\"cg\">Democratic Republic of the Congo</option>\n              <option value=\"dk\">Denmark</option>\n              <option value=\"dm\">Dominica</option>\n              <option value=\"do\">Dominican Republic</option>\n              <option value=\"ec\">Ecuador</option>\n              <option value=\"eg\">Egypt</option>\n              <option value=\"sv\">El Salvador</option>\n              <option value=\"ee\">Estonia</option>\n              <option value=\"fm\">Federated States of Micronesia</option>\n              <option value=\"fj\">Fiji</option>\n              <option value=\"fi\">Finland</option>\n              <option value=\"fr\">France</option>\n              <option value=\"gm\">Gambia</option>\n              <option value=\"de\">Germany</option>\n              <option value=\"gh\">Ghana</option>\n              <option value=\"gr\">Greece</option>\n              <option value=\"gd\">Grenada</option>\n              <option value=\"gt\">Guatemala</option>\n              <option value=\"gw\">Guinea Bissau</option>\n              <option value=\"gy\">Guyana</option>\n              <option value=\"hn\">Honduras</option>\n              <option value=\"hk\">Hong Kong</option>\n              <option value=\"hu\">Hungary</option>\n              <option value=\"is\">Iceland</option>\n              <option value=\"in\">India</option>\n              <option value=\"id\">Indonesia</option>\n              <option value=\"ie\">Ireland</option>\n              <option value=\"il\">Israel</option>\n              <option value=\"it\">Italy</option>\n              <option value=\"jm\">Jamaica</option>\n              <option value=\"jp\">Japan</option>\n              <option value=\"jo\">Jordan</option>\n              <option value=\"kz\">Kazakhstan</option>\n              <option value=\"ke\">Kenya</option>\n              <option value=\"kg\">Krygyzstan</option>\n              <option value=\"kw\">Kuwait</option>\n              <option value=\"la\">Laos</option>\n              <option value=\"lv\">Latvia</option>\n              <option value=\"lb\">Lebanon</option>\n              <option value=\"lr\">Liberia</option>\n              <option value=\"lt\">Lithuania</option>\n              <option value=\"lu\">Luxembourg</option>\n              <option value=\"mo\">Macau</option>\n              <option value=\"mk\">Macedonia</option>\n              <option value=\"mg\">Madagascar</option>\n              <option value=\"mw\">Malawi</option>\n              <option value=\"my\">Malaysia</option>\n              <option value=\"ml\">Mali</option>\n              <option value=\"mt\">Malta</option>\n              <option value=\"mr\">Mauritania</option>\n              <option value=\"mu\">Mauritius</option>\n              <option value=\"mx\">Mexico</option>\n              <option value=\"md\">Moldova</option>\n              <option value=\"mn\">Mongolia</option>\n              <option value=\"ms\">Montserrat</option>\n              <option value=\"mz\">Mozambique</option>\n              <option value=\"na\">Namibia</option>\n              <option value=\"np\">Nepal</option>\n              <option value=\"nl\">Netherlands</option>\n              <option value=\"nz\">New Zealand</option>\n              <option value=\"ni\">Nicaragua</option>\n              <option value=\"ne\">Niger</option>\n              <option value=\"ng\">Nigeria</option>\n              <option value=\"no\">Norway</option>\n              <option value=\"om\">Oman</option>\n              <option value=\"pk\">Pakistan</option>\n              <option value=\"pw\">Palau</option>\n              <option value=\"pa\">Panama</option>\n              <option value=\"pg\">Papua New Guinea</option>\n              <option value=\"py\">Paraguay</option>\n              <option value=\"pe\">Peru</option>\n              <option value=\"ph\">Philippines</option>\n              <option value=\"pl\">Poland</option>\n              <option value=\"pt\">Portugal</option>\n              <option value=\"qa\">Qatar</option>\n              <option value=\"tt\">Republic of Trinidad and Tobago</option>\n              <option value=\"ro\">Romania</option>\n              <option value=\"ru\">Russia</option>\n              <option value=\"kn\">Saint Kitts and Nevis</option>\n              <option value=\"lc\">Saint Lucia</option>\n              <option value=\"vc\">Saint Vincent and the Grenadines</option>\n              <option value=\"st\">Sao Tome e Principe</option>\n              <option value=\"sa\">Saudi Arabia</option>\n              <option value=\"sn\">Senegal</option>\n              <option value=\"sc\">Seychelles</option>\n              <option value=\"sl\">Sierra Leone</option>\n              <option value=\"sg\">Singapore</option>\n              <option value=\"sk\">Slovakia</option>\n              <option value=\"si\">Slovenia</option>\n              <option value=\"sb\">Soloman Islands</option>\n              <option value=\"za\">South Africa</option>\n              <option value=\"kr\">South Korea</option>\n              <option value=\"es\">Spain</option>\n              <option value=\"lk\">Sri Lanka</option>\n              <option value=\"sr\">Suriname</option>\n              <option value=\"sz\">Swaziland</option>\n              <option value=\"se\">Sweden</option>\n              <option value=\"ch\">Switzerland</option>\n              <option value=\"tw\">Taiwan</option>\n              <option value=\"tj\">Tajikistan</option>\n              <option value=\"tz\">Tanzania</option>\n              <option value=\"th\">Thailand</option>\n              <option value=\"tn\">Tunisia</option>\n              <option value=\"tr\">Turkey</option>\n              <option value=\"tm\">Turkmenistan</option>\n              <option value=\"tc\">Turks and Caicos Islands</option>\n              <option value=\"ug\">Uganda</option>\n              <option value=\"ua\">Ukraine</option>\n              <option value=\"ae\">United Arab Emirates</option>\n              <option value=\"gb\">United Kingdom</option>\n              <option value=\"us\">United States of America</option>\n              <option value=\"uy\">Uruguay</option>\n              <option value=\"uz\">Uzbekistan</option>\n              <option value=\"ve\">Venezuela</option>\n              <option value=\"vn\">Vietnam</option>\n              <option value=\"ye\">Yemen</option>\n              <option value=\"zw\">Zimbabwe</option>\n            </select>\n            <br></br>\n            <input type=\"submit\" className=\"submit\" value=\"Search\" />\n          </form>\n        </div>\n        {searchResult.length !== 0 ? (\n          searchResult.map((collection) => (\n            <img\n              key={collection.id}\n              width={60}\n              height={60}\n              src={collection.images[0].url}\n              alt={collection.name + \" - \" + collection.artists[0].name}\n              onClick={handleClickAlbum}\n            />\n          ))\n        ) : (\n          <></>\n        )}\n      </div>\n      <div style={{ marginTop: \"1em\" }}>\n        <h5>사용방법: desktop 탑스터와 비슷합니다.</h5>\n        <h5>SetGrid와 Set42는 반드시 reset후에 설정해주시기 바랍니다.</h5>\n        <h5>Chrome 브라우저에서 정상 작동합니다.</h5>\n        <h5>\n          이미지를 클릭하면 새로운 앨범을 <br></br>검색하고 추가할 수 있습니다.\n        </h5>\n        <h5>문의: bldolphin96@gmail.com</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/eumhojun/mobile-topster/src/index.js",["36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","/Users/eumhojun/mobile-topster/src/reportWebVitals.js",[],"/Users/eumhojun/mobile-topster/src/credentials.js",[],"/Users/eumhojun/mobile-topster/src/Grid.js",["37","38","39","40","41","42","43"],{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":9},{"ruleId":"44","severity":1,"message":"48","line":8,"column":10,"nodeType":"46","messageId":"47","endLine":8,"endColumn":16},{"ruleId":"44","severity":1,"message":"49","line":8,"column":18,"nodeType":"46","messageId":"47","endLine":8,"endColumn":27},{"ruleId":"44","severity":1,"message":"50","line":8,"column":29,"nodeType":"46","messageId":"47","endLine":8,"endColumn":34},{"ruleId":"44","severity":1,"message":"51","line":14,"column":3,"nodeType":"46","messageId":"47","endLine":14,"endColumn":24},{"ruleId":"44","severity":1,"message":"52","line":15,"column":3,"nodeType":"46","messageId":"47","endLine":15,"endColumn":48},{"ruleId":"44","severity":1,"message":"53","line":17,"column":8,"nodeType":"46","messageId":"47","endLine":17,"endColumn":19},{"ruleId":"44","severity":1,"message":"54","line":181,"column":10,"nodeType":"46","messageId":"47","endLine":181,"endColumn":20},{"ruleId":"44","severity":1,"message":"55","line":318,"column":15,"nodeType":"46","messageId":"47","endLine":318,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":352,"column":6,"nodeType":"58","endLine":352,"endColumn":8,"suggestions":"59"},{"ruleId":"44","severity":1,"message":"60","line":608,"column":9,"nodeType":"46","messageId":"47","endLine":608,"endColumn":26},{"ruleId":"44","severity":1,"message":"61","line":614,"column":9,"nodeType":"46","messageId":"47","endLine":614,"endColumn":25},{"ruleId":"44","severity":1,"message":"62","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":23},{"ruleId":"44","severity":1,"message":"63","line":4,"column":10,"nodeType":"46","messageId":"47","endLine":4,"endColumn":13},{"ruleId":"44","severity":1,"message":"64","line":11,"column":7,"nodeType":"46","messageId":"47","endLine":11,"endColumn":14},{"ruleId":"44","severity":1,"message":"65","line":26,"column":16,"nodeType":"46","messageId":"47","endLine":26,"endColumn":23},{"ruleId":"44","severity":1,"message":"66","line":27,"column":10,"nodeType":"46","messageId":"47","endLine":27,"endColumn":14},{"ruleId":"44","severity":1,"message":"67","line":27,"column":16,"nodeType":"46","messageId":"47","endLine":27,"endColumn":23},{"ruleId":"44","severity":1,"message":"68","line":28,"column":21,"nodeType":"46","messageId":"47","endLine":28,"endColumn":33},{"ruleId":"44","severity":1,"message":"69","line":29,"column":17,"nodeType":"46","messageId":"47","endLine":29,"endColumn":25},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'config' is defined but never used.","'debugPort' is defined but never used.","'title' is defined but never used.","'SSL_OP_NO_COMPRESSION' is defined but never used.","'SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION' is defined but never used.","'TopsterGrid' is defined but never used.","'albumWidth' is assigned a value but never used.","'api1' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'curTopsterStyle'. Either include it or remove the dependency array.","ArrayExpression",["70"],"'handleDoubleClick' is assigned a value but never used.","'handleShowTitles' is assigned a value but never used.","'reportWebVitals' is defined but never used.","'set' is defined but never used.","'yPoints' is assigned a value but never used.","'setCols' is assigned a value but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'setRowHeight' is assigned a value but never used.","'setWidth' is assigned a value but never used.",{"desc":"71","fix":"72"},"Update the dependencies array to be: [curTopsterStyle]",{"range":"73","text":"74"},[9211,9213],"[curTopsterStyle]"]