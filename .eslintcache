[{"/Users/eumhojun/mobile-topster/src/App.js":"1","/Users/eumhojun/mobile-topster/src/credentials.js":"2","/Users/eumhojun/mobile-topster/src/models/Titles.js":"3","/Users/eumhojun/mobile-topster/src/models/Topster.js":"4","/Users/eumhojun/mobile-topster/src/components/Options.js":"5","/Users/eumhojun/mobile-topster/src/components/SearchWindow.js":"6","/Users/eumhojun/mobile-topster/src/components/SearchForm.js":"7","/Users/eumhojun/mobile-topster/src/components/TitleList.js":"8","/Users/eumhojun/mobile-topster/src/components/TopsterTemplate.js":"9","/Users/eumhojun/mobile-topster/src/components/ControlButtons.js":"10","/Users/eumhojun/mobile-topster/src/components/Manual.js":"11","/Users/eumhojun/mobile-topster/src/index.tsx":"12"},{"size":8137,"mtime":1649257976136,"results":"13","hashOfConfig":"14"},{"size":157,"mtime":1634230073721,"results":"15","hashOfConfig":"14"},{"size":246,"mtime":1643179293419,"results":"16","hashOfConfig":"14"},{"size":1045,"mtime":1649257887229,"results":"17","hashOfConfig":"14"},{"size":2194,"mtime":1643179293415,"results":"18","hashOfConfig":"14"},{"size":3675,"mtime":1644155609326,"results":"19","hashOfConfig":"14"},{"size":7879,"mtime":1633758470148,"results":"20","hashOfConfig":"14"},{"size":725,"mtime":1633758470149,"results":"21","hashOfConfig":"14"},{"size":1419,"mtime":1633758470149,"results":"22","hashOfConfig":"14"},{"size":308,"mtime":1633758470146,"results":"23","hashOfConfig":"14"},{"size":488,"mtime":1643179293415,"results":"24","hashOfConfig":"14"},{"size":204,"mtime":1649257502164,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"8diocy",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eumhojun/mobile-topster/src/App.js",["54","55","56","57","58"],"/Users/eumhojun/mobile-topster/src/credentials.js",[],["59","60"],"/Users/eumhojun/mobile-topster/src/models/Titles.js",["61"],"import * as _ from \"lodash\";\n\nexport default class Titles {\n  constructor(row, col) {\n    this._row = row;\n    this._col = col;\n    this.titleList = new Array(this._row).fill(new Array(this._col).fill(\"\"));\n    console.log(this.titleList);\n  }\n}\n","/Users/eumhojun/mobile-topster/src/models/Topster.js",["62"],"/Users/eumhojun/mobile-topster/src/components/Options.js",["63"],"import { Topster } from \"../models/Topster\";\n\nfunction Options({\n  showOptions,\n  showAlbumTitle,\n  setShowAlbumTitle,\n  backgroundColor,\n  setBackgroundColor,\n  rows,\n  setRows,\n  columns,\n  setColumns,\n  setTopster,\n  fetchTopster,\n  updateTopster,\n}) {\n  return (\n    <div id=\"options\" style={{ display: showOptions }}>\n      {/* 타이틀 숨김버튼 */}\n      <input\n        type=\"checkbox\"\n        checked={showAlbumTitle}\n        onChange={(e) => setShowAlbumTitle(!showAlbumTitle)}\n      />\n\n      <label>SHOW ALBUM TITLES</label>\n      <br></br>\n\n      {/* 배경색 설정버튼 */}\n      <label>BackgroundColor in #HEX: </label>\n      <input\n        type=\"text\"\n        placeholder=\"#HEX color\"\n        value={backgroundColor}\n        onChange={(e) => setBackgroundColor(e.target.value)}\n      />\n\n      {/* <label>#HEX</label> */}\n      <br></br>\n\n      {/* row 설정 */}\n      <label>ROWS</label>\n      <input\n        type=\"range\"\n        min=\"1\"\n        max=\"10\"\n        value={rows}\n        onChange={(e) => {\n          setRows(Number.parseInt(e.target.value));\n          e.preventDefault();\n        }}\n      />\n      <span>{rows}</span>\n      <br></br>\n\n      {/* columns 설정 */}\n      <label>COLUMNS</label>\n      <input\n        type=\"range\"\n        min=\"1\"\n        max=\"10\"\n        value={columns}\n        onChange={(e) => {\n          setColumns(Number.parseInt(e.target.value));\n          e.preventDefault();\n        }}\n      />\n      <span>{columns}</span>\n      <br></br>\n\n      {/* 그리드설정버튼 */}\n      <button\n        onClick={(e) => {\n          updateTopster(rows, columns, \"grid\");\n          e.preventDefault();\n        }}\n      >\n        SetGrid\n      </button>\n\n      {/* top42 설정버튼 */}\n      <button\n        onClick={(e) => {\n          setRows(6);\n          setColumns(7);\n          updateTopster(6, 7, \"top42\");\n          e.preventDefault();\n        }}\n      >\n        Top42\n      </button>\n\n      {/* 리셋버튼 */}\n      {/* <button\n        onClick={(e) => {\n          resetTopster();\n          fetchTopster();\n          e.preventDefault();\n        }}\n      >\n        Reset\n      </button> */}\n    </div>\n  );\n}\n\nexport default Options;\n","/Users/eumhojun/mobile-topster/src/components/SearchWindow.js",["64"],"import React, { useState } from \"react\";\nimport Qs from \"querystring\";\nimport axios from \"axios\";\nimport { username, password } from \"../credentials\";\nimport SearchForm from \"./SearchForm\";\nimport cancel from \"../images/cancel.png\";\nimport paper from \"../images/paper.jpeg\";\n\nconst SPOTIFY_API = \"https://accounts.spotify.com/api/token\";\nconst CONTENT_TYPE = \"application/x-www-form-urlencoded\";\n\nconst getApi1 = (query, country) =>\n  `https://api.spotify.com/v1/search/?q=album:${query}%20OR%20artist:${query}&type=album&market=${country}&limit=50`;\nconst getApi2 = (query, country) =>\n  `https://api.spotify.com/v1/search/?q=${query}&type=album&market=${country}&limit=50`;\n\nfunction SearchWindow({ onClickCancel, showSearch, handleClickAlbum }) {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [country, setCountry] = useState(\"us\");\n  const [searchResult, setSearchResult] = useState([]);\n\n  const handleSubmit = (e, searchInput, country) => {\n    e.preventDefault();\n\n    const trimmedSearchInput = searchInput.trim();\n    // 직접 앨범을 추가하는 경우\n    if (trimmedSearchInput.slice(0, 4) === \"http\") {\n      const artists = window.prompt(\"아티스트명을 입력해주세요.\");\n      const albumName = window.prompt(\"앨범명을 입력해주세요.\");\n\n      setSearchResult([\n        {\n          artists: [{ name: \"\" }],\n          name: \"\",\n          images: [{ url: paper }],\n          id: \"00000\",\n        },\n        {\n          artists: [{ name: artists }],\n          name: albumName,\n          images: [{ url: trimmedSearchInput }],\n          id: \"99999\",\n        },\n      ]);\n      return;\n    }\n\n    const query = trimmedSearchInput.replace(\" \", \"+\");\n\n    // query spotify api\n    const authConfig = {\n      method: \"post\",\n      url: SPOTIFY_API,\n      headers: {\n        \"Content-Type\": CONTENT_TYPE,\n      },\n      data: Qs.stringify({ grant_type: \"client_credentials\" }),\n      auth: {\n        username: username,\n        password: password,\n      },\n      withCredentials: true,\n    };\n\n    axios(authConfig)\n      .then((res) => {\n        const api1 = getApi1(query, country);\n        const api2 = getApi2(query, country);\n\n        const { access_token } = res.data;\n\n        const queryConfig = {\n          method: \"get\",\n          url: api2,\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n          },\n        };\n\n        axios(queryConfig).then((res) => {\n          const {\n            albums: { items },\n          } = res.data;\n\n          setSearchResult([\n            {\n              artists: [{ name: \"\" }],\n              name: \"\",\n              images: [{ url: paper }],\n              id: \"00000\",\n            },\n            ...items,\n          ]);\n        });\n      })\n      .catch((err) => console.warn(err));\n  };\n\n  return (\n    <div\n      id={showSearch ? \"searchBoxContainer-show\" : \"searchBoxContainer-hidden\"}\n    >\n      <img src={cancel} alt=\"cancel\" onClick={onClickCancel} />\n      <div id=\"formContainer\">\n        <SearchForm\n          onSubmit={(e) => handleSubmit(e, searchInput, country)}\n          onChangeInput={(e) => setSearchInput(e.target.value)}\n          onChangeCountry={(e) => setCountry(e.target.value)}\n        />\n      </div>\n      {searchResult.length !== 0 ? (\n        searchResult.map((collection) => (\n          <img\n            key={collection.id}\n            width={60}\n            height={60}\n            src={collection.images[0].url}\n            alt={collection.name + \" - \" + collection.artists[0].name}\n            onClick={handleClickAlbum}\n          />\n        ))\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default SearchWindow;\n","/Users/eumhojun/mobile-topster/src/components/SearchForm.js",[],"/Users/eumhojun/mobile-topster/src/components/TitleList.js",[],"/Users/eumhojun/mobile-topster/src/components/TopsterTemplate.js",[],"/Users/eumhojun/mobile-topster/src/components/ControlButtons.js",[],"/Users/eumhojun/mobile-topster/src/components/Manual.js",[],"/Users/eumhojun/mobile-topster/src/index.tsx",[],{"ruleId":"65","severity":1,"message":"66","line":92,"column":6,"nodeType":"67","endLine":92,"endColumn":47,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":94,"column":9,"nodeType":"71","messageId":"72","endLine":94,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":127,"column":22,"nodeType":"71","messageId":"72","endLine":127,"endColumn":38},{"ruleId":"69","severity":1,"message":"74","line":127,"column":40,"nodeType":"71","messageId":"72","endLine":127,"endColumn":48},{"ruleId":"69","severity":1,"message":"75","line":128,"column":11,"nodeType":"71","messageId":"72","endLine":128,"endColumn":25},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"69","severity":1,"message":"80","line":1,"column":13,"nodeType":"71","messageId":"72","endLine":1,"endColumn":14},{"ruleId":"69","severity":1,"message":"81","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":20},{"ruleId":"69","severity":1,"message":"82","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":17},{"ruleId":"69","severity":1,"message":"83","line":67,"column":15,"nodeType":"71","messageId":"72","endLine":67,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveTopster'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-unused-vars","'getExtenedHeight' is assigned a value but never used.","Identifier","unusedVar","'titlelistPadding' is assigned a value but never used.","'fontSize' is assigned a value but never used.","'titlelistWidth' is assigned a value but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'_' is defined but never used.","'createTile' is defined but never used.","'Topster' is defined but never used.","'api1' is assigned a value but never used.",{"desc":"87","fix":"88"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [topster, rows, columns, backgroundColor, saveTopster]",{"range":"89","text":"90"},[3482,3523],"[topster, rows, columns, backgroundColor, saveTopster]"]