[{"/Users/eumhojun/mobile-topster/src/App.js":"1","/Users/eumhojun/mobile-topster/src/index.js":"2","/Users/eumhojun/mobile-topster/src/reportWebVitals.js":"3"},{"size":32392,"mtime":1609810844498,"results":"4","hashOfConfig":"5"},{"size":460,"mtime":1609762060653,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609320116750,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"m1kwa4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eumhojun/mobile-topster/src/App.js",["16"],"import React, { useState, useRef, useEffect } from 'react';\nimport $ from 'jquery';\nimport * as _ from \"lodash\";\nimport { saveAs } from 'file-saver';\nimport * as htmlToImage from 'html-to-image';\nimport './App.css';\n\nlet initAlbums = {\n  'row1': {\n    isShow: false,\n    cols: new Array(6).fill({\n      src: \"/smallblank.png\",\n      alt: \"\",\n      showCol: false,\n  }),\n},\n  'row2': {\n    isShow: false,\n    cols: new Array(6).fill({\n      src: \"/smallblank.png\",\n      alt: \"\",\n      showCol: false,\n  }),\n},\n  'row3': {\n    isShow: false,\n    cols: new Array(6).fill({\n      src: \"/smallblank.png\",\n      alt: \"\",\n      showCol: false,\n  }),\n},\n  'row4': {\n    isShow: false,\n    cols: new Array(6).fill({\n      src: \"/smallblank.png\",\n      alt: \"\",\n      showCol: false,\n  }),\n},\n  'row5': {\n    isShow: false,\n    cols: new Array(6).fill({\n      src: \"/smallblank.png\",\n      alt: \"\",\n      showCol: false,\n  }),\n},\n  'row6': {\n    isShow: true,\n    cols: new Array(6).fill({\n      src: \"/smallblank.png\",\n      alt: \"\",\n      showCol: false,\n  }),\n},\n}\n\n// console.log(initAlbums['row1']['cols'])\ninitAlbums['row1']['cols'].splice(5,1,{\n  src: \"/smallblank.png\",\n  alt: \"\",\n  showCol: true,\n});\ninitAlbums['row2']['cols'].splice(5,1,{\n  src: \"/smallblank.png\",\n  alt: \"\",\n  showCol: true,\n});\ninitAlbums['row3']['cols'].splice(5,1,{\n  src: \"/smallblank.png\",\n  alt: \"\",\n  showCol: true,\n});\ninitAlbums['row4']['cols'].splice(5,1,{\n  src: \"/smallblank.png\",\n  alt: \"\",\n  showCol: true,\n});\ninitAlbums['row5']['cols'].splice(5,1,{\n  src: \"/smallblank.png\",\n  alt: \"\",\n  showCol: true,\n});\ninitAlbums['row6']['cols'].splice(5,1,{\n  src: \"/smallblank.png\",\n  alt: \"\",\n  showCol: true,\n});\n\nconsole.log(initAlbums);\n\nconst initTitles = {\n  row1: new Array(6).fill(\"\"),\n  row2: new Array(6).fill(\"\"),\n  row3: new Array(6).fill(\"\"),\n  row4: new Array(6).fill(\"\"),\n  row5: new Array(6).fill(\"\"),\n  row6: new Array(6).fill(\"\"),\n};\n\nfunction App() {\n  // initAlbums['row2']['cols'][5]['showCol'] = 'none';\n  // initAlbums['row3']['cols'][5]['showCol'] = 'none';\n  // initAlbums['row4']['cols'][5]['showCol'] = 'none';\n  // initAlbums['row5']['cols'][5]['showCol'] = 'none';\n  // initAlbums['row6']['cols'][5]['showCol'] = 'none';\n\n  const [ albums, setAlbums ] = useState(initAlbums);\n  const [ showSearch, setShowSearch ] = useState('none');\n  const [ selected, setSelected ] = useState(null);\n  const [ term, setTerm ] = useState(\"\");\n  const [ country, setCountry ] = useState(\"us\");\n  const [ searchResult, setSearchResult ] = useState([]);\n  const [ showAlbumTitle, setShowAlbumTitle ] = useState(false);\n  const [ showOptions, setShowOptions ] = useState('none');\n  const [ backgroundColor, setBackgroundColor ] = useState(\"#000\");\n  const [ rows, setRows ] = useState(5);\n  const [ columns, setColumns] = useState(5);\n  const [ albumWidth, setAlbumWidth ] = useState(\"18vw\");\n  const [ titles, setTitles ] = useState(initTitles);\n\n  const handleClickTopster = (e) => {\n    e.preventDefault();\n    if (showSearch === 'none') {\n      setShowSearch('');\n      setSelected(e.target.id);\n      console.log(e.target.id);\n    }\n    \n  }\n\n  const handleClickAlbum = (e) => {\n    console.log('handle click album');\n  \n\n    const selectedRow = selected.slice(0, 4);\n    const selectedCol = Number.parseInt(selected.slice(5));\n    const newAlbums = _.assign({}, albums);\n    \n    console.log(selectedRow);\n    console.log(selectedCol);\n    console.log(newAlbums[selectedRow].cols[selectedCol])\n    newAlbums[selectedRow].cols.splice(selectedCol, 1, { src: e.target.src, alt: e.target.alt });\n    // _.assign(newAlbums[selectedRow].cols[selectedCol], { src: e.target.src, alt: e.target.alt });\n\n    setAlbums(newAlbums);\n\n    const newTitles = {...titles};\n    newTitles[selectedRow][selectedCol] = e.target.alt;\n    setTitles(newTitles);\n    console.log('topster updated');\n\n    // for (let [index, imgNode] of albums.entries()) {\n    //   if (index === selected) {\n        \n    //     // const newAlbums = [...albums];\n    //     // const newImgNode = newAlbums[index];\n    //     // newImgNode.src = e.target.src;\n    //     // newImgNode.alt = e.target.alt;\n    //     // console.log(newImgNode);\n    //     // newAlbums.splice(selected, 1, newImgNode);\n    //     // setAlbums(newAlbums);\n    //     // imgNode.src = e.target.src;\n    //     // imgNode.alt = e.target.alt;\n    //     // const newTitles = [...titles];\n    //     // newTitles[index] = e.target.alt;\n    //     // console.log('topster updated');\n    //     break;\n    //   }\n    // }\n\n    setSelected(null);\n    setShowSearch('none');\n  }\n\n\n  //   const imgList = document.querySelectorAll('.image-cover');\n  //   imgList.forEach((node) => {\n  //     node.addEventListener('click', () => {\n  //       const imgUrl = node.src;\n  //       const title = node.alt.slice(0, node.alt.lastIndexOf('a'));\n  //       const textnode = node.parentElement.nextElementSibling.childNodes[2].textContent;\n  //       const artistName = textnode.trim(7);\n  //       window.parent.postMessage({ \n  //         albumTitle: title,\n  //         artistName: artistName,\n  //         imgUrl: imgUrl\n  //       }, 'http://localhost:3000/');\n  //     })\n  //   })\n  // }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    console.log(term);\n    const trimTerm = term.trim();\n    const queryTerm = trimTerm.replace(\" \", \"+\");\n    \n    // const ITUNES_API = `https://itunes.apple.com/search?term=${queryTerm}&country=${country}&media=music&entity=album&callback=jsonpcallback`;\n\n    // query itunes api\n    $.ajax({\n      url: 'https://itunes.apple.com/search',\n      crossDomain: true,\n      dataType: 'jsonp',\n      data: {\n        term: queryTerm,\n        country: country,\n        // media: 'music',\n        entity: 'album',\n        limit: 100,\n        explicit: 'No'\n      },\n      method: 'GET',\n      success: function(data){\n        console.log(data);\n        const { results } = data;\n        setSearchResult(results);\n      }\n    })\n  }\n\n  useEffect(() => {\n    // const imgNodes = document.getElementsByTagName('img');\n    // const nodeArr = Array.from(imgNodes);\n    // setAlbums(nodeArr);\n    // console.log(albums);\n  }, [])\n\n  // const ImgWithCaption = (props) => (\n  //   <figure className=\"figure\" style={{...props.style, width: albumWidth }}>\n  //     <img id={props.id} src={props.src} alt={props.alt} onClick={handleClickTopster}/>\n  //     {/* {showAlbumTitle ? <figcaption>{props.alt}</figcaption> : <></>} */}\n  //   </figure>)\n\n  // const handleColumns = (curColumns) => {\n  //   // const docRows = Array.from(document.getElementsByClassName('row'));\n  //   // // const showingRows = docRows.filter(row => row.style.display === '');\n  //   // docRows.forEach((arow) => {\n  //   //   const showingColumns = Array.from(arow.children).filter(acolumn => acolumn.style.display === '');\n  //   let newAlbums = { ...albums };\n  //   const showingColumns = newAlbums.row1.cols.filter(album => album.showCol === false);\n\n  //     if (curColumns === showingColumns.length) {\n  //       return\n  //     }\n  //     else if (curColumns > showingColumns.length) {\n  //       // 새로운 칼럼이 기존보다 더 많을 경우\n  //       for (let row of Object.values(newAlbums)) {\n  //         for (let i = showingColumns.length; i < curColumns; i++) {\n  //           row[i].showCol = '';\n  //         }\n\n  //       }\n  //     }\n  //     else {\n  //       // 새로운 칼럼이 기존보다 더 적을 경우\n  //       // for (let row of Object.values(newAlbums)) {\n  //       //   for (let i = curColumns; i < showingColumns.length; i++) {\n  //       //     row[i].showCol = 'none';\n  //       //   }\n  //       // }\n  //       // for (let key of _.keys(albums)) {\n  //       //   // const toUpdate = _.takeRight(newAlbums[key].cols, diff);\n  //       //   // const updated = toUpdate.map(each => {\n  //       //   //   const newOne = { ...each, showCol: true };\n  //       //   //   return newOne\n  //       //   // })\n  //       //   // const dropped = _.dropRight(newAlbums[key], diff);\n  //       //   // const merged = _.concat(dropped, updated);\n  //       //   // newAlbums[key].cols = merged;\n  \n  //       //   // const last = _.nth(newAlbums[key].cols);\n  //       //   // console.log(last);\n  //       //   // last.showCol = true;\n  //       //   // newAlbums[key].cols.splice(newAlbums[key].cols.length - 1, 1, last);\n  //       //   newAlbums[key].cols[showingColumns.length - 1].showCol = true;\n  //       // }\n  //       setAlbums(newAlbums);\n  //       console.log(newAlbums);\n  //     }\n  //   // })\n    \n  // }\n\n  // const handleRows = (curRows) => {\n  //   const topCon = document.getElementById('topCon');\n  //   const showingRows = Array.from(topCon.children).filter(arow => arow.style.display === '');\n  //   if (curRows === showingRows.length) {\n  //     return\n  //   }\n  //   else if (curRows > showingRows.length) {\n  //     // 새로운 로우가 기존보다 많을 경우\n  //     for (let i = showingRows.length; i < curRows; i++) {\n  //       topCon.children[i].style.display = '';\n  //     }\n  //   }\n  //   else {\n  //     // 새로운 로우가 기존보다 적을 경우 \n  //     for (let i = curRows; i < showingRows.length; i++) {\n  //       topCon.children[i].style.display = 'none';\n  //     }\n  //   }\n  // }\n\n  const handleSave = () => {\n    const topCon = document.getElementById('topCon');\n    const options = {\n      pixelRatio: 1\n    }\n    htmlToImage.toBlob(topCon, options)\n    .then(data => saveAs(data, 'topster-mobile.jpg'))\n    .catch(err => console.warn(err));\n  }\n\n  const handleSetGrid = (curRows, curColumns) => {\n    console.log('handling set grid');\n    // handleRows(rows);\n    // handleColumns(columns);\n    \n    let newAlbums = { ...albums };\n    const showingColumns = newAlbums.row1.cols.filter(album => album.showCol === false);\n    // console.log(newAlbums);\n    \n    // console.log(showingColumns.length);\n    // console.log(typeof curColumns);\n    const hideCol = (row, differ) => {\n      const theRow = newAlbums[row];\n      const toUpdate = _.takeRight(theRow.cols, differ);\n      console.log(toUpdate);\n      // const updated = toUpdate.map(each => {\n      //   const newOne = { ...each, showCol: true };\n      //   return newOne\n      // })\n      const updated = _.map(toUpdate, each => ({ ...each, showCol: true}));\n      const dropped = _.dropRight(theRow.cols, differ);\n      console.log(dropped);\n      const merged = _.concat(dropped, updated);\n      newAlbums[row].cols = merged;\n\n    }\n    \n    const showCol = (row, differ) => {\n      const theRow = newAlbums[row];\n      const toUpdate = _.take(theRow.cols, differ);\n      console.log(toUpdate);\n      // const updated = toUpdate.map(each => {\n      //   const newOne = { ...each, showCol: false };\n      //   return newOne\n      // })\n      const updated = _.map(toUpdate, each => ({ ...each, showCol: false}));\n      const dropped = _.drop(theRow.cols, differ);\n      console.log(dropped);\n      const merged = _.concat(updated, dropped);\n      newAlbums[row].cols = merged;  \n    }\n\n    if (curColumns === showingColumns.length) {\n      \n    }\n    else if (curColumns > showingColumns.length) {\n      // 새로운 칼럼이 기존보다 더 많을 경우\n      // for (let arow of Object.values(newAlbums)) {\n      //   for (let i = showingColumns.length; i <= curColumns; i++) {\n      //     // arow['cols'][i]['showCol'] = false;\n      //     console.log(arow);\n      //     _.set(arow, `cols[${i}].showCol`, false);\n      //   }\n      // }\n      const diff = curColumns;\n      showCol('row1', diff);\n      showCol('row2', diff);\n      showCol('row3', diff);\n      showCol('row4', diff);\n      showCol('row5', diff);\n      showCol('row6', diff);\n      console.log(newAlbums);\n    }\n    else {\n      \n      // 새로운 칼럼이 기존보다 더 적을 경우\n      // for (let arow of Object.values(newAlbums)) {\n      //   for (let i = curColumns; i <= showingColumns.length; i++) {\n      //     console.log(i);\n      //     console.log(arow);\n      //     arow.cols[i].showCol = true;\n      //     // _.set(arow, `cols[${i}].showCol`, true);\n      //     console.log(arow);\n      //   }\n      // }\n\n      // Object.keys(albums).forEach((key, index) => {\n      //   console.log(albums);\n      //   console.log(key);\n      //   albums[key].cols.forEach((col, index, thisRow) => {\n      //     if (index >= curColumns) {\n      //       console.log(newAlbums[key]['cols']);\n      //       newAlbums[key]['cols'][index].showCol = true;\n      //       console.log(newAlbums[key]['cols']);\n      //       return\n      //     }\n      //   })\n      //   return\n      // })\n      \n      const diff = 6 - curColumns;\n      console.log(albums);\n      // for (let key of _.keys(newAlbums)) {\n      //   // const toUpdate = _.takeRight(newAlbums[key].cols, diff);\n      //   // const updated = toUpdate.map(each => {\n      //   //   const newOne = { ...each, showCol: true };\n      //   //   return newOne\n      //   // })\n      //   // const dropped = _.dropRight(newAlbums[key], diff);\n      //   // const merged = _.concat(dropped, updated);\n      //   // newAlbums[key].cols = merged;\n\n      //   const last = _.last(newAlbums[key].cols);\n      //   console.log(last);\n      //   last.showCol = true;\n      //   newAlbums[key].cols.splice(newAlbums[key].cols.length - 1, 1, last);\n      // }\n      console.log(newAlbums);\n      hideCol('row1', diff);\n      hideCol('row2', diff);\n      hideCol('row3', diff);\n      hideCol('row4', diff);\n      hideCol('row5', diff);\n      hideCol('row6', diff);\n      console.log(newAlbums);\n    }\n\n    console.log('handling rows');\n    // const showingRows = Object.getOwnPropertyNames(albums);\n    let count = 0;\n    for (let row of Object.values(newAlbums)) {\n      if (row.isShow === false) {\n        count += 1;\n      }\n    }\n\n    console.log(count);\n    console.log(curRows);\n\n    if (curRows === count) {\n      \n    }\n    else if (curRows > count) {\n      // 새로운 로우가 기존보다 많을 경우\n      // for (let [index, element] of Object.keys(newAlbums).entries()) {\n      //   if (index >= count) {\n      //     newAlbums[element].isShow = false;\n      //     console.log(newAlbums[element]);\n      //   }\n      // }\n      Object.keys(newAlbums).forEach((key, index) => {\n        if (index <= curRows) {\n          newAlbums[key].isShow = false;\n        }\n      })\n    }\n    else {\n      // 새로운 로우가 기존보다 적을 경우 \n      // for (let [key, value] of Object.keys(newAlbums)) {\n      //   if (index >= count) {\n      //     newAlbums[element].isShow = true;\n      //   }\n      // }\n      Object.keys(newAlbums).forEach((key, index) => {\n        if (index >= curRows) {\n          newAlbums[key].isShow = true;\n        }\n      })\n    }\n\n    console.log(newAlbums);\n    setAlbums(newAlbums);\n\n    console.log(curColumns);\n    const newImgWidth = `${Math.floor(90 / curColumns)}vw`;\n    console.log(newImgWidth);\n    setAlbumWidth(newImgWidth);\n  }\n\n  const handleShowOptions = () => {\n    if (showOptions === '') {\n      setShowOptions('none');\n    }\n    else {\n      setShowOptions('');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={handleShowOptions}>Options</button>\n      <button onClick={handleSave}>Save</button>\n      {/* 탑스터  */}\n      <div id=\"topCon\" className=\"topCon\" style={{ backgroundColor: backgroundColor }}>\n        <div className=\"row\" id=\"row1\" hidden={albums['row1'].isShow}>\n          {albums['row1']['cols'].map((album, index) => {\n            return (<img key={`row1-${index}`} hidden={album.showCol} style={{ width: albumWidth, }} id={`row1-${index}`} src={album.src} alt={album.alt} onClick={handleClickTopster}/>)\n            })}\n           {/* <ImgWithCaption id={0} src={albums[0].src} alt={albums[0].alt}/>\n           <ImgWithCaption id={1} src={albums[1].src} alt={albums[1].alt}/>\n           <ImgWithCaption id={2} src={albums[2].src} alt={albums[2].alt}/>\n           <ImgWithCaption id={3} src={albums[3].src} alt={albums[3].alt}/>\n           <ImgWithCaption id={4} src={albums[4].src} alt={albums[4].alt}/>\n           <ImgWithCaption style={{ display: 'none' }} id={5} src={albums[5].src]} alt={albums[5].alt}/> */}\n        </div>\n        <div className=\"row\" id=\"row2\" hidden={albums['row2'].isShow}>\n          {albums['row2']['cols'].map((album, index) => {\n            return (<img key={`row2-${index}`} hidden={album.showCol} style={{ width: albumWidth, }} id={`row2-${index}`} src={album.src} alt={album.alt} onClick={handleClickTopster}/>)\n            })}\n           {/* <ImgWithCaption id={6} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={7} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={8} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={9} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={10} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption style={{ display: 'none' }} id={11} src={\"/smallblank.png\"} alt={\"\"}/> */}\n        </div>\n        <div className=\"row\" id=\"row3\" hidden={albums['row3'].isShow}>\n          {albums['row3']['cols'].map((album, index) => {\n            return (<img key={`row3-${index}`} hidden={album.showCol} style={{ width: albumWidth, }} id={`row3-${index}`} src={album.src} alt={album.alt} onClick={handleClickTopster}/>)\n            })}\n           {/* <ImgWithCaption id={12} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={13} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={14} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={15} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={16} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption style={{ display: 'none' }} id={17} src={\"/smallblank.png\"} alt={\"\"}/> */}\n        </div>\n        <div className=\"row\" id=\"row4\" hidden={albums['row4'].isShow}>\n          {albums['row4']['cols'].map((album, index) => {\n            return (<img key={`row4-${index}`} hidden={album.showCol} style={{ width: albumWidth, }} id={`row4-${index}`} src={album.src} alt={album.alt} onClick={handleClickTopster}/>)\n            })}\n           {/* <ImgWithCaption id={18} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={19} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={20} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={21} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={22} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption style={{ display: 'none' }} id={23} src={\"/smallblank.png\"} alt={\"\"}/> */}\n        </div>\n        <div className=\"row\" id=\"row5\" hidden={albums['row5'].isShow}>\n          {albums['row5']['cols'].map((album, index) => {\n            return (<img key={`row5-${index}`} hidden={album.showCol} style={{ width: albumWidth, }} id={`row5-${index}`} src={album.src} alt={album.alt} onClick={handleClickTopster}/>)\n            })}\n           {/* <ImgWithCaption id={24} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={25} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={26} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={27} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={28} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption style={{ display: 'none' }} id={29} src={\"/smallblank.png\"} alt={\"\"}/> */}\n        </div>\n        <div className=\"row\" id=\"row6\" hidden={true}>\n          {albums['row6']['cols'].map((album, index) => {\n            return (<img key={`row6-${index}`} hidden={album.showCol} style={{ width: albumWidth, }} id={`row6-${index}`} src={album.src} alt={album.alt} onClick={handleClickTopster}/>)\n            })}\n           {/* <ImgWithCaption id={30} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={31} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={32} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={33} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption id={34} src={\"/smallblank.png\"} alt={\"\"}/>\n           <ImgWithCaption style={{ display: 'none' }} id={35} src={\"/smallblank.png\"} alt={\"\"}/> */}\n        </div>\n        <div style={ showAlbumTitle ? { display: '' } : { display: 'none' } }>\n          <ul>\n            {titles['row1'].map((title,index) => <li key={`row1-${index}-title`} >{title}</li>)}\n            <br></br>\n            {titles['row2'].map((title,index) => <li key={`row2-${index}-title`} >{title}</li>)}\n            <br></br>\n            {titles['row3'].map((title,index) => <li key={`row3-${index}-title`} >{title}</li>)}\n            <br></br>\n            {titles['row4'].map((title,index) => <li key={`row4-${index}-title`} >{title}</li>)}\n            <br></br>\n            {titles['row5'].map((title,index) => <li key={`row5-${index}-title`} >{title}</li>)}\n            <br></br>\n            {titles['row6'].map((title,index) => <li key={`row6-${index}-title`} >{title}</li>)}\n          </ul>\n        </div>\n      </div>\n      <div style={{ display: showOptions }}>\n        {/* <input type=\"text\" id=\"widthInput\" name=\"widthInput\"/>\n        <input type=\"text\" id=\"heightInput\" name=\"heightInput\"/>\n        <button>submit</button> */}\n        <input type=\"checkbox\" checked={showAlbumTitle} onChange={(e) => setShowAlbumTitle(!showAlbumTitle)}/> \n        <label>album titles </label>\n        <br></br>\n        <label>Background: </label>\n        <input type=\"text\" placeholder=\"#HEX color\" value={backgroundColor} onChange={e => setBackgroundColor(e.target.value)}/>\n        <label>#HEX</label>\n        <br></br>\n        <label>rows</label>\n        <input type=\"range\" min=\"1\" max=\"6\" value={rows} onChange={e => {\n          setRows(Number.parseInt(e.target.value))\n          e.preventDefault();\n          }}/><span>{rows}</span>\n        <br></br>\n        <label>columns</label>\n        <input type=\"range\" min=\"1\" max=\"6\" value={columns} onChange={e => {\n          setColumns(Number.parseInt(e.target.value));\n          e.preventDefault();\n          }}/><span>{columns}</span>\n          <br></br>\n        <button onClick={(e) => {\n          handleSetGrid(rows, columns)\n          e.preventDefault();\n          }}>SetGrid</button>\n      </div>\n         {/* 검색창  */}\n      <div id=\"framecontainer\" style={{ display: showSearch, position: 'fixed', width: '100%', top: '20px', backgroundColor: 'transparent', overflow: 'auto'}}>\n        <img src='/cross.png' alt=\"cross\" onClick={() => setShowSearch('none')}/>\n        <div id=\"formcontainer\">\n          <form action=\"\" method=\"get\" acceptCharset=\"utf-8\" id=\"iTunesSearchForm\" onSubmit={handleSubmit}>\n\t  \t      <input type=\"text\" className=\"text\" name=\"term\" id=\"term\" onChange={(e) => {\n              setTerm(e.target.value);\n              }}/>\n\t  \t      <select name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}>\n                  <option value=\"us\">United States of America</option>\n                  <option value=\"gb\">United Kingdom</option>\n                  <option value=\"al\">Albania</option>\n                  <option value=\"dz\">Algeria</option>\n                  <option value=\"ao\">Angola</option>\n                  <option value=\"ai\">Anguilla</option>\n                  <option value=\"ag\">Antigua and Barbuda</option>\n                  <option value=\"ar\">Argentina</option>\n                  <option value=\"am\">Armenia</option>\n                  <option value=\"au\">Australia</option>\n                  <option value=\"at\">Austria</option>\n                  <option value=\"az\">Azerbaijan</option>\n                  <option value=\"bs\">Bahamas</option>\n                  <option value=\"bh\">Bahrain</option>\n                  <option value=\"bb\">Barbados</option>\n                  <option value=\"by\">Belarus</option>\n                  <option value=\"be\">Belgium</option>\n                  <option value=\"bz\">Belize</option>\n                  <option value=\"bj\">Benin</option>\n                  <option value=\"bm\">Bermuda</option>\n                  <option value=\"bt\">Bhutan</option>\n                  <option value=\"bo\">Bolivia</option>\n                  <option value=\"bw\">Botswana</option>\n                  <option value=\"br\">Brazil</option>\n                  <option value=\"vg\">British Virgin Islands</option>\n                  <option value=\"bn\">Brunei Darussalam</option>\n                  <option value=\"bg\">Bulgaria</option>\n                  <option value=\"bf\">Burkina-Faso</option>\n                  <option value=\"kh\">Cambodia</option>\n                  <option value=\"ca\">Canada</option>\n                  <option value=\"cv\">Cape Verde</option>\n                  <option value=\"ky\">Cayman Islands</option>\n                  <option value=\"td\">Chad</option>\n                  <option value=\"cl\">Chile</option>\n                  <option value=\"cn\">China</option>\n                  <option value=\"co\">Colombia</option>\n                  <option value=\"cr\">Costa Rica</option>\n                  <option value=\"hr\">Croatia</option>\n                  <option value=\"cy\">Cyprus</option>\n                  <option value=\"cz\">Czech Republic</option>\n                  <option value=\"cg\">Democratic Republic of the Congo</option>\n                  <option value=\"dk\">Denmark</option>\n                  <option value=\"dm\">Dominica</option>\n                  <option value=\"do\">Dominican Republic</option>\n                  <option value=\"ec\">Ecuador</option>\n                  <option value=\"eg\">Egypt</option>\n                  <option value=\"sv\">El Salvador</option>\n                  <option value=\"ee\">Estonia</option>\n                  <option value=\"fm\">Federated States of Micronesia</option>\n                  <option value=\"fj\">Fiji</option>\n                  <option value=\"fi\">Finland</option>\n                  <option value=\"fr\">France</option>\n                  <option value=\"gm\">Gambia</option>\n                  <option value=\"de\">Germany</option>\n                  <option value=\"gh\">Ghana</option>\n                  <option value=\"gr\">Greece</option>\n                  <option value=\"gd\">Grenada</option>\n                  <option value=\"gt\">Guatemala</option>\n                  <option value=\"gw\">Guinea Bissau</option>\n                  <option value=\"gy\">Guyana</option>\n                  <option value=\"hn\">Honduras</option>\n                  <option value=\"hk\">Hong Kong</option>\n                  <option value=\"hu\">Hungary</option>\n                  <option value=\"is\">Iceland</option>\n                  <option value=\"in\">India</option>\n                  <option value=\"id\">Indonesia</option>\n                  <option value=\"ie\">Ireland</option>\n                  <option value=\"il\">Israel</option>\n                  <option value=\"it\">Italy</option>\n                  <option value=\"jm\">Jamaica</option>\n                  <option value=\"jp\">Japan</option>\n                  <option value=\"jo\">Jordan</option>\n                  <option value=\"kz\">Kazakhstan</option>\n                  <option value=\"ke\">Kenya</option>\n                  <option value=\"kg\">Krygyzstan</option>\n                  <option value=\"kw\">Kuwait</option>\n                  <option value=\"la\">Laos</option>\n                  <option value=\"lv\">Latvia</option>\n                  <option value=\"lb\">Lebanon</option>\n                  <option value=\"lr\">Liberia</option>\n                  <option value=\"lt\">Lithuania</option>\n                  <option value=\"lu\">Luxembourg</option>\n                  <option value=\"mo\">Macau</option>\n                  <option value=\"mk\">Macedonia</option>\n                  <option value=\"mg\">Madagascar</option>\n                  <option value=\"mw\">Malawi</option>\n                  <option value=\"my\">Malaysia</option>\n                  <option value=\"ml\">Mali</option>\n                  <option value=\"mt\">Malta</option>\n                  <option value=\"mr\">Mauritania</option>\n                  <option value=\"mu\">Mauritius</option>\n                  <option value=\"mx\">Mexico</option>\n                  <option value=\"md\">Moldova</option>\n                  <option value=\"mn\">Mongolia</option>\n                  <option value=\"ms\">Montserrat</option>\n                  <option value=\"mz\">Mozambique</option>\n                  <option value=\"na\">Namibia</option>\n                  <option value=\"np\">Nepal</option>\n                  <option value=\"nl\">Netherlands</option>\n                  <option value=\"nz\">New Zealand</option>\n                  <option value=\"ni\">Nicaragua</option>\n                  <option value=\"ne\">Niger</option>\n                  <option value=\"ng\">Nigeria</option>\n                  <option value=\"no\">Norway</option>\n                  <option value=\"om\">Oman</option>\n                  <option value=\"pk\">Pakistan</option>\n                  <option value=\"pw\">Palau</option>\n                  <option value=\"pa\">Panama</option>\n                  <option value=\"pg\">Papua New Guinea</option>\n                  <option value=\"py\">Paraguay</option>\n                  <option value=\"pe\">Peru</option>\n                  <option value=\"ph\">Philippines</option>\n                  <option value=\"pl\">Poland</option>\n                  <option value=\"pt\">Portugal</option>\n                  <option value=\"qa\">Qatar</option>\n                  <option value=\"tt\">Republic of Trinidad and Tobago</option>\n                  <option value=\"ro\">Romania</option>\n                  <option value=\"ru\">Russia</option>\n                  <option value=\"kn\">Saint Kitts and Nevis</option>\n                  <option value=\"lc\">Saint Lucia</option>\n                  <option value=\"vc\">Saint Vincent and the Grenadines</option>\n                  <option value=\"st\">Sao Tome e Principe</option>\n                  <option value=\"sa\">Saudi Arabia</option>\n                  <option value=\"sn\">Senegal</option>\n                  <option value=\"sc\">Seychelles</option>\n                  <option value=\"sl\">Sierra Leone</option>\n                  <option value=\"sg\">Singapore</option>\n                  <option value=\"sk\">Slovakia</option>\n                  <option value=\"si\">Slovenia</option>\n                  <option value=\"sb\">Soloman Islands</option>\n                  <option value=\"za\">South Africa</option>\n                  <option value=\"kr\">South Korea</option>\n                  <option value=\"es\">Spain</option>\n                  <option value=\"lk\">Sri Lanka</option>\n                  <option value=\"sr\">Suriname</option>\n                  <option value=\"sz\">Swaziland</option>\n                  <option value=\"se\">Sweden</option>\n                  <option value=\"ch\">Switzerland</option>\n                  <option value=\"tw\">Taiwan</option>\n                  <option value=\"tj\">Tajikistan</option>\n                  <option value=\"tz\">Tanzania</option>\n                  <option value=\"th\">Thailand</option>\n                  <option value=\"tn\">Tunisia</option>\n                  <option value=\"tr\">Turkey</option>\n                  <option value=\"tm\">Turkmenistan</option>\n                  <option value=\"tc\">Turks and Caicos Islands</option>\n                  <option value=\"ug\">Uganda</option>\n                  <option value=\"ua\">Ukraine</option>\n                  <option value=\"ae\">United Arab Emirates</option>\n                  <option value=\"gb\">United Kingdom</option>\n                  <option value=\"us\">United States of America</option>\n                  <option value=\"uy\">Uruguay</option>\n                  <option value=\"uz\">Uzbekistan</option>\n                  <option value=\"ve\">Venezuela</option>\n                  <option value=\"vn\">Vietnam</option>\n                  <option value=\"ye\">Yemen</option>\n                  <option value=\"zw\">Zimbabwe</option>\n\t  \t      </select>\n\t  \t      <input type=\"submit\" className=\"submit\" value=\"Search\"/>\n\t        </form>\n        </div>\n        {/* <iframe ref={iframeRef} id=\"iframe\" src=\"https://www.covermytunes.com/\" width=\"80%\" height=\"500px\" onLoad={handelOnloadIframe}>\n        </iframe> */}\n        { \n          searchResult.length !== 0 ?\n          searchResult.map(collection => <img key={collection.collectionId} src={collection.artworkUrl60} alt={collection.collectionName + '-' + collection.artistName} onClick={handleClickAlbum}/>)\n          :\n          <></>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/eumhojun/mobile-topster/src/index.js",["17"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","/Users/eumhojun/mobile-topster/src/reportWebVitals.js",[],{"ruleId":"18","severity":1,"message":"19","line":1,"column":27,"nodeType":"20","messageId":"21","endLine":1,"endColumn":33},{"ruleId":"18","severity":1,"message":"22","line":5,"column":8,"nodeType":"20","messageId":"21","endLine":5,"endColumn":23},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'reportWebVitals' is defined but never used."]