[{"/Users/eumhojun/mobile-topster/src/App.js":"1","/Users/eumhojun/mobile-topster/src/index.js":"2","/Users/eumhojun/mobile-topster/src/credentials.js":"3","/Users/eumhojun/mobile-topster/src/models/Titles.js":"4","/Users/eumhojun/mobile-topster/src/models/Topster.js":"5","/Users/eumhojun/mobile-topster/src/components/Options.js":"6","/Users/eumhojun/mobile-topster/src/components/SearchWindow.js":"7","/Users/eumhojun/mobile-topster/src/components/SearchForm.js":"8","/Users/eumhojun/mobile-topster/src/components/TitleList.js":"9","/Users/eumhojun/mobile-topster/src/components/TopsterTemplate.js":"10","/Users/eumhojun/mobile-topster/src/components/ControlButtons.js":"11","/Users/eumhojun/mobile-topster/src/components/Manual.js":"12"},{"size":9116,"mtime":1634142945454,"results":"13","hashOfConfig":"14"},{"size":168,"mtime":1633758470152,"results":"15","hashOfConfig":"14"},{"size":119,"mtime":1610326559817,"results":"16","hashOfConfig":"14"},{"size":213,"mtime":1633758665703,"results":"17","hashOfConfig":"14"},{"size":994,"mtime":1633758742772,"results":"18","hashOfConfig":"14"},{"size":1971,"mtime":1633864898179,"results":"19","hashOfConfig":"14"},{"size":3693,"mtime":1633864802357,"results":"20","hashOfConfig":"14"},{"size":7879,"mtime":1633758470148,"results":"21","hashOfConfig":"14"},{"size":725,"mtime":1633758470149,"results":"22","hashOfConfig":"14"},{"size":1419,"mtime":1633758470149,"results":"23","hashOfConfig":"14"},{"size":308,"mtime":1633758470146,"results":"24","hashOfConfig":"14"},{"size":513,"mtime":1634142673035,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"m1kwa4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eumhojun/mobile-topster/src/App.js",["53","54","55","56","57","58","59","60","61","62"],"/Users/eumhojun/mobile-topster/src/index.js",[],"/Users/eumhojun/mobile-topster/src/credentials.js",[],"/Users/eumhojun/mobile-topster/src/models/Titles.js",["63"],"import * as _ from \"lodash\";\n\nexport default class Titles {\n  constructor(row, col) {\n    this._row = row;\n    this._col = col;\n    this.titleList = new Array(this._row).fill(new Array(this._col).fill(\"\"));\n  }\n}\n","/Users/eumhojun/mobile-topster/src/models/Topster.js",["64"],"/Users/eumhojun/mobile-topster/src/components/Options.js",["65"],"import { Topster } from \"../models/Topster\";\n\nfunction Options({\n  showOptions,\n  showAlbumTitle,\n  setShowAlbumTitle,\n  backgroundColor,\n  setBackgroundColor,\n  rows,\n  setRows,\n  columns,\n  setColumns,\n  setTopster,\n  updateTopster,\n}) {\n  return (\n    <div id=\"options\" style={{ display: showOptions }}>\n      {/* 타이틀 숨김버튼 */}\n      <input\n        type=\"checkbox\"\n        checked={showAlbumTitle}\n        onChange={(e) => setShowAlbumTitle(!showAlbumTitle)}\n      />\n\n      <label>SHOW ALBUM TITLES</label>\n      <br></br>\n\n      {/* 배경색 설정버튼 */}\n      <label>BackgroundColor in #HEX: </label>\n      <input\n        type=\"text\"\n        placeholder=\"#HEX color\"\n        value={backgroundColor}\n        onChange={(e) => setBackgroundColor(e.target.value)}\n      />\n\n      {/* <label>#HEX</label> */}\n      <br></br>\n\n      {/* row 설정 */}\n      <label>ROWS</label>\n      <input\n        type=\"range\"\n        min=\"1\"\n        max=\"10\"\n        value={rows}\n        onChange={(e) => {\n          setRows(Number.parseInt(e.target.value));\n          e.preventDefault();\n        }}\n      />\n      <span>{rows}</span>\n      <br></br>\n\n      {/* columns 설정 */}\n      <label>COLUMNS</label>\n      <input\n        type=\"range\"\n        min=\"1\"\n        max=\"10\"\n        value={columns}\n        onChange={(e) => {\n          setColumns(Number.parseInt(e.target.value));\n          e.preventDefault();\n        }}\n      />\n      <span>{columns}</span>\n      <br></br>\n\n      {/* 그리드설정버튼 */}\n      <button\n        onClick={(e) => {\n          updateTopster(rows, columns, \"grid\");\n          e.preventDefault();\n        }}\n      >\n        SetGrid\n      </button>\n\n      {/* top42 설정버튼 */}\n      <button\n        onClick={(e) => {\n          setRows(6);\n          setColumns(7);\n          updateTopster(6, 7, \"top42\");\n          e.preventDefault();\n        }}\n      >\n        Top42\n      </button>\n    </div>\n  );\n}\n\nexport default Options;\n","/Users/eumhojun/mobile-topster/src/components/SearchWindow.js",["66"],"import React, { useState } from \"react\";\nimport Qs from \"querystring\";\nimport axios from \"axios\";\nimport { username, password } from \"../credentials\";\nimport SearchForm from \"./SearchForm\";\nimport cancel from \"../images/cancel.png\";\nimport paper from \"../images/paper.jpeg\";\n\nconst SPOTIFY_API = \"https://accounts.spotify.com/api/token\";\nconst CONTENT_TYPE = \"application/x-www-form-urlencoded\";\n\nconst getApi1 = (query, country) =>\n  `https://api.spotify.com/v1/search/?q=album:${query}%20OR%20artist:${query}&type=album&market=${country}&limit=50`;\nconst getApi2 = (query, country) =>\n  `https://api.spotify.com/v1/search/?q=${query}&type=album&market=${country}&limit=50`;\n\nfunction SearchWindow({ onClickCancel, showSearch, handleClickAlbum }) {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [country, setCountry] = useState(\"us\");\n  const [searchResult, setSearchResult] = useState([]);\n\n  const handleSubmit = (e, searchInput, country) => {\n    e.preventDefault();\n\n    const trimmedSearchInput = searchInput.trim();\n    // 직접 앨범을 추가하는 경우\n    if (trimmedSearchInput.slice(0, 4) === \"http\") {\n      const artists = window.prompt(\"아티스트명을 입력해주세요.\");\n      const albumName = window.prompt(\"앨범명을 입력해주세요.\");\n\n      setSearchResult([\n        {\n          artists: [{ name: \"\" }],\n          name: \"\",\n          images: [{ url: paper }],\n          id: \"00000\",\n        },\n        {\n          artists: [{ name: artists }],\n          name: albumName,\n          images: [{ url: trimmedSearchInput }],\n          id: \"99999\",\n        },\n      ]);\n      return;\n    }\n\n    const query = trimmedSearchInput.replace(\" \", \"+\");\n\n    // query spotify api\n    const authConfig = {\n      method: \"post\",\n      url: SPOTIFY_API,\n      headers: {\n        \"Content-Type\": CONTENT_TYPE,\n      },\n      data: Qs.stringify({ grant_type: \"client_credentials\" }),\n      auth: {\n        username: username,\n        password: password,\n      },\n      withCredentials: true,\n    };\n\n    axios(authConfig)\n      .then((res) => {\n        const api1 = getApi1(query, country);\n        const api2 = getApi2(query, country);\n\n        const { access_token } = res.data;\n\n        const queryConfig = {\n          method: \"get\",\n          url: api2,\n          headers: {\n            Authorization: `Bearer ${access_token}`,\n          },\n        };\n\n        axios(queryConfig).then((res) => {\n          const {\n            albums: { items },\n          } = res.data;\n\n          setSearchResult([\n            {\n              artists: [{ name: \"\" }],\n              name: \"\",\n              images: [{ url: paper }],\n              id: \"00000\",\n            },\n            ...items,\n          ]);\n        });\n      })\n      .catch((err) => console.warn(err));\n  };\n\n  return (\n    <div\n      id={showSearch ? \"searchBoxContainer-show\" : \"searchBoxContainer-hidden\"}\n    >\n      <img id=\"cancelButton\" src={cancel} alt=\"cancel\" onClick={onClickCancel} />\n      <div id=\"formContainer\">\n        <SearchForm\n          onSubmit={(e) => handleSubmit(e, searchInput, country)}\n          onChangeInput={(e) => setSearchInput(e.target.value)}\n          onChangeCountry={(e) => setCountry(e.target.value)}\n        />\n      </div>\n      {searchResult.length !== 0 ? (\n        searchResult.map((collection) => (\n          <img\n            key={collection.id}\n            width={60}\n            height={60}\n            src={collection.images[0].url}\n            alt={collection.name + \" - \" + collection.artists[0].name}\n            onClick={handleClickAlbum}\n          />\n        ))\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default SearchWindow;\n","/Users/eumhojun/mobile-topster/src/components/SearchForm.js",[],"/Users/eumhojun/mobile-topster/src/components/TitleList.js",[],"/Users/eumhojun/mobile-topster/src/components/TopsterTemplate.js",[],"/Users/eumhojun/mobile-topster/src/components/ControlButtons.js",[],"/Users/eumhojun/mobile-topster/src/components/Manual.js",[],{"ruleId":"67","severity":1,"message":"68","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":18},{"ruleId":"67","severity":1,"message":"71","line":7,"column":20,"nodeType":"69","messageId":"70","endLine":7,"endColumn":28},{"ruleId":"67","severity":1,"message":"72","line":9,"column":3,"nodeType":"69","messageId":"70","endLine":9,"endColumn":24},{"ruleId":"67","severity":1,"message":"73","line":10,"column":3,"nodeType":"69","messageId":"70","endLine":10,"endColumn":48},{"ruleId":"67","severity":1,"message":"74","line":19,"column":8,"nodeType":"69","messageId":"70","endLine":19,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":93,"column":6,"nodeType":"77","endLine":101,"endColumn":4,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":111,"column":22,"nodeType":"69","messageId":"70","endLine":111,"endColumn":38},{"ruleId":"67","severity":1,"message":"80","line":111,"column":40,"nodeType":"69","messageId":"70","endLine":111,"endColumn":48},{"ruleId":"67","severity":1,"message":"81","line":112,"column":11,"nodeType":"69","messageId":"70","endLine":112,"endColumn":25},{"ruleId":"67","severity":1,"message":"82","line":210,"column":9,"nodeType":"69","messageId":"70","endLine":210,"endColumn":26},{"ruleId":"67","severity":1,"message":"83","line":1,"column":13,"nodeType":"69","messageId":"70","endLine":1,"endColumn":14},{"ruleId":"67","severity":1,"message":"84","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":14},{"ruleId":"67","severity":1,"message":"85","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":17},{"ruleId":"67","severity":1,"message":"86","line":67,"column":15,"nodeType":"69","messageId":"70","endLine":67,"endColumn":19},"no-unused-vars","'username' is defined but never used.","Identifier","unusedVar","'password' is defined but never used.","'SSL_OP_NO_COMPRESSION' is defined but never used.","'SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION' is defined but never used.","'Titles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveTopster'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'titlelistPadding' is assigned a value but never used.","'fontSize' is assigned a value but never used.","'titlelistWidth' is assigned a value but never used.","'handleDoubleClick' is assigned a value but never used.","'_' is defined but never used.","'each' is defined but never used.","'Topster' is defined but never used.","'api1' is assigned a value but never used.",{"desc":"88","fix":"89"},"Update the dependencies array to be: [topster, rows, columns, backgroundColor, showSearch, showOptions, showAlbumTitle, saveTopster]",{"range":"90","text":"91"},[3446,3561],"[topster, rows, columns, backgroundColor, showSearch, showOptions, showAlbumTitle, saveTopster]"]